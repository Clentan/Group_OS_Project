{"ast":null,"code":"var _jsxFileName = \"E:\\\\Group_OS_Project\\\\src\\\\components\\\\ProcessPool.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProcessPool = () => {\n  const processes = [{\n    id: 'P1',\n    status: 'green',\n    exec: '2.5s',\n    holds: '[1,0,1]',\n    wants: '[0,1,0]'\n  }, {\n    id: 'P2',\n    status: 'yellow',\n    exec: '1.8s',\n    holds: '[0,1,0]',\n    wants: '[0,0,1]'\n  }, {\n    id: 'P3',\n    status: 'green',\n    exec: '3.2s',\n    holds: '[1,0,0]',\n    wants: '[0,1,0]'\n  }, {\n    id: 'P4',\n    status: 'red',\n    exec: '0.9s',\n    holds: '[0,1,0]',\n    wants: '[1,0,0]'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"panel process-pool\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Process Pool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), processes.map((process, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"process\",\n      id: `process${index + 1}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `status-indicator ${process.status}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"process-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: process.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Exec: \", process.exec]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Holds: \", process.holds]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Wants: \", process.wants]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = ProcessPool;\nexport default ProcessPool;\nvar _c;\n$RefreshReg$(_c, \"ProcessPool\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ProcessPool","processes","id","status","exec","holds","wants","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","process","index","_c","$RefreshReg$"],"sources":["E:/Group_OS_Project/src/components/ProcessPool.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst ProcessPool = () => {\r\n  const processes = [\r\n    { id: 'P1', status: 'green', exec: '2.5s', holds: '[1,0,1]', wants: '[0,1,0]' },\r\n    { id: 'P2', status: 'yellow', exec: '1.8s', holds: '[0,1,0]', wants: '[0,0,1]' },\r\n    { id: 'P3', status: 'green', exec: '3.2s', holds: '[1,0,0]', wants: '[0,1,0]' },\r\n    { id: 'P4', status: 'red', exec: '0.9s', holds: '[0,1,0]', wants: '[1,0,0]' },\r\n  ];\r\n\r\n  return (\r\n    <section className=\"panel process-pool\">\r\n      <h2>Process Pool</h2>\r\n      {processes.map((process, index) => (\r\n        <div key={index} className=\"process\" id={`process${index + 1}`}>\r\n          <div className={`status-indicator ${process.status}`}></div>\r\n          <div className=\"process-info\">\r\n            <div><strong>{process.id}</strong></div>\r\n            <div>Exec: {process.exec}</div>\r\n            <div>Holds: {process.holds}</div>\r\n            <div>Wants: {process.wants}</div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default ProcessPool;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACxB,MAAMC,SAAS,GAAG,CAChB;IAAEC,EAAE,EAAE,IAAI;IAAEC,MAAM,EAAE,OAAO;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,EAC/E;IAAEJ,EAAE,EAAE,IAAI;IAAEC,MAAM,EAAE,QAAQ;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,EAChF;IAAEJ,EAAE,EAAE,IAAI;IAAEC,MAAM,EAAE,OAAO;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,EAC/E;IAAEJ,EAAE,EAAE,IAAI;IAAEC,MAAM,EAAE,KAAK;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAU,CAAC,CAC9E;EAED,oBACEP,OAAA;IAASQ,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACrCT,OAAA;MAAAS,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBX,SAAS,CAACY,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC5BhB,OAAA;MAAiBQ,SAAS,EAAC,SAAS;MAACL,EAAE,EAAE,UAAUa,KAAK,GAAG,CAAC,EAAG;MAAAP,QAAA,gBAC7DT,OAAA;QAAKQ,SAAS,EAAE,oBAAoBO,OAAO,CAACX,MAAM;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC5Db,OAAA;QAAKQ,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3BT,OAAA;UAAAS,QAAA,eAAKT,OAAA;YAAAS,QAAA,EAASM,OAAO,CAACZ;UAAE;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACxCb,OAAA;UAAAS,QAAA,GAAK,QAAM,EAACM,OAAO,CAACV,IAAI;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC/Bb,OAAA;UAAAS,QAAA,GAAK,SAAO,EAACM,OAAO,CAACT,KAAK;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjCb,OAAA;UAAAS,QAAA,GAAK,SAAO,EAACM,OAAO,CAACR,KAAK;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC;IAAA,GAPEG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAEd,CAAC;AAACI,EAAA,GAxBIhB,WAAW;AA0BjB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}